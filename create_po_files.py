import os

def create_po_file(language_code, translations):
    # Create directory structure if it doesn't exist
    os.makedirs(f'locale/{language_code}/LC_MESSAGES', exist_ok=True)
    
    # Create the PO file
    with open(f'locale/{language_code}/LC_MESSAGES/django.po', 'w', encoding='utf-8') as f:
        # Write header
        f.write('msgid ""\n')
        f.write('msgstr ""\n')
        if language_code == 'lt':
            f.write('"Project-Id-Version: PACKAGE VERSION\\n"\n')
            f.write('"Report-Msgid-Bugs-To: \\n"\n')
            f.write('"POT-Creation-Date: 2025-01-05 22:30+0200\\n"\n')
            f.write('"PO-Revision-Date: 2025-01-05 22:30+0200\\n"\n')
            f.write('"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n"\n')
            f.write('"Language-Team: Lithuanian <LL@li.org>\\n"\n')
            f.write('"Language: lt\\n"\n')
            f.write('"MIME-Version: 1.0\\n"\n')
            f.write('"Content-Type: text/plain; charset=UTF-8\\n"\n')
            f.write('"Content-Transfer-Encoding: 8bit\\n"\n')
            f.write('"Plural-Forms: nplurals=4; plural=(n % 10 == 1 && (n % 100 > 19 || n % 100 < 11) ? 0 : (n % 10 >= 2 && n % 10 <=9) && (n % 100 > 19 || n % 100 < 11) ? 1 : n % 1 != 0 ? 2: 3);\\n"\n')
        else:
            f.write('"Project-Id-Version: PACKAGE VERSION\\n"\n')
            f.write('"Report-Msgid-Bugs-To: \\n"\n')
            f.write('"POT-Creation-Date: 2025-01-05 22:53+0000\\n"\n')
            f.write('"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n"\n')
            f.write('"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n"\n')
            f.write('"Language-Team: LANGUAGE <LL@li.org>\\n"\n')
            f.write('"Language: en\\n"\n')
            f.write('"MIME-Version: 1.0\\n"\n')
            f.write('"Content-Type: text/plain; charset=UTF-8\\n"\n')
            f.write('"Content-Transfer-Encoding: 8bit\\n"\n')
            f.write('"Plural-Forms: nplurals=2; plural=(n != 1);\\n"\n')
        f.write('\n')

        # Write translations
        for msgid, msgstr in translations.items():
            f.write(f'msgid "{msgid}"\n')
            f.write(f'msgstr "{msgstr}"\n\n')

# Define translations
en_translations = {
    "%(from)s-%(to)s relationship": "%(from)s-%(to)s relationship",
    "Logo": "Logo",
    "Login": "Login",
    "Username": "Username",
    "Password": "Password",
    "Invalid username or password.": "Invalid username or password.",
    "Home - Lung Disease Classifier": "Home - Lung Disease Classifier",
    "Lung Disease Classifier": "Lung Disease Classifier",
    "Upload a chest X-ray image to detect pneumonia using our advanced deep learning model. Accuracy: 96.13% (validated through 5-fold cross-validation)": "Upload a chest X-ray image to detect pneumonia using our advanced deep learning model. Accuracy: 96.13% (validated through 5-fold cross-validation)",
    "Upload X-Ray Image": "Upload X-Ray Image",
    "Patient Name": "Patient Name",
    "Patient Surname": "Patient Surname",
    "Patient ID": "Patient ID",
    "Patient Date of Birth (YYYY-MM-DD)": "Patient Date of Birth (YYYY-MM-DD)",
    "YYYY-MM-DD": "YYYY-MM-DD",
    "Patient Gender": "Patient Gender",
    "Select Gender": "Select Gender",
    "Male": "Male",
    "Female": "Female",
    "X-Ray Date (YYYY-MM-DD)": "X-Ray Date (YYYY-MM-DD)",
    "Drag & Drop or Click to Upload": "Drag & Drop or Click to Upload",
    "Supported formats: JPEG, PNG, DICOM": "Supported formats: JPEG, PNG, DICOM",
    "Preview": "Preview",
    "Analyze Image": "Analyze Image",
    "Loading...": "Loading...",
    "Analyzing your X-ray image...": "Analyzing your X-ray image...",
    "High Accuracy": "High Accuracy",
    "96.13% accuracy with cross-validation and ensemble learning.": "96.13% accuracy with cross-validation and ensemble learning.",
    "Fast Processing": "Fast Processing",
    "Optimized with PyTorch JIT and parallel processing for rapid inference.": "Optimized with PyTorch JIT and parallel processing for rapid inference.",
    "Detailed Analysis": "Detailed Analysis",
    "Comprehensive probability scores and visualization.": "Comprehensive probability scores and visualization.",
    "Recent Predictions": "Recent Predictions",
    "All": "All",
    "Normal": "Normal",
    "Pneumonia": "Pneumonia",
    "X-ray": "X-ray",
    "Patient Information:": "Patient Information:",
    "Name:": "Name:",
    "Surname:": "Surname:",
    "Patient ID:": "Patient ID:",
    "Gender:": "Gender:",
    "Date of Birth:": "Date of Birth:",
    "X-Ray Date:": "X-Ray Date:",
    "Prediction:": "Prediction:",
    "Normal Probability:": "Normal Probability:",
    "Pneumonia Probability:": "Pneumonia Probability:",
    "ago": "ago",
    "MB": "MB",
    "s": "s",
    "Are you sure you want to delete this record?": "Are you sure you want to delete this record?",
    "Delete Record": "Delete Record",
    "Load More Records": "Load More Records",
    "About - Lung Disease Classifier": "About - Lung Disease Classifier",
    "About the Project": "About the Project",
    "Learn about the technology behind our lung disease classification system.": "Learn about the technology behind our lung disease classification system.",
    "Analysis Result - Lung Disease Classifier": "Analysis Result - Lung Disease Classifier",
    "Analysis Result": "Analysis Result",
    "Primary Diagnosis": "Primary Diagnosis",
    "Confidence:": "Confidence:",
    "Probability Analysis": "Probability Analysis",
    "Technical Information": "Technical Information",
    "Processing Time": "Processing Time",
    "Model Version": "Model Version",
    "Analysis Date": "Analysis Date",
    "Hardware": "Hardware",
    "Analyze Another Image": "Analyze Another Image",
    "Print Report": "Print Report",
    "Important Note": "Important Note",
    "This analysis is provided as a screening tool and should not be used as the sole basis for diagnosis. Please consult with a qualified healthcare professional for proper medical evaluation and diagnosis.": "This analysis is provided as a screening tool and should not be used as the sole basis for diagnosis. Please consult with a qualified healthcare professional for proper medical evaluation and diagnosis.",
    "Home": "Home",
    "About": "About",
    "Logout": "Logout",
    "Created by Paulius Bundza, Vilnius Tech. All rights reserved.": "Created by Paulius Bundza, Vilnius Tech. All rights reserved.",
    "Language": "Language",
    "Select Language": "Select Language",
    "English": "English",
    "© 2024 Lung Disease Classifier. Created by Paulius Bundza, Vilnius Tech. All rights reserved.": "© 2024 Lung Disease Classifier. Created by Paulius Bundza, Vilnius Tech. All rights reserved.",
    "Model Information": "Model Information",
    "Architecture": "Architecture",
    "Convolutional Neural Network (CNN)": "Convolutional Neural Network (CNN)",
    "Training Data": "Training Data",
    "Over 100,000 chest X-ray images": "Over 100,000 chest X-ray images",
    "Validation Method": "Validation Method",
    "5-fold cross-validation": "5-fold cross-validation",
    "Base Model": "Base Model",
    "ResNet-50 with transfer learning": "ResNet-50 with transfer learning",
    "Training Time": "Training Time",
    "48 hours on NVIDIA A100": "48 hours on NVIDIA A100",
    "Model Size": "Model Size",
    "98MB (optimized with quantization)": "98MB (optimized with quantization)",
    "Performance Metrics": "Performance Metrics",
    "Accuracy": "Accuracy",
    "96.13%": "96.13%",
    "Sensitivity": "Sensitivity",
    "94.89%": "94.89%",
    "Specificity": "Specificity",
    "97.37%": "97.37%",
    "F1 Score": "F1 Score",
    "95.92%": "95.92%",
    "AUC-ROC": "AUC-ROC",
    "0.983": "0.983",
    "Technical Details": "Technical Details",
    "Framework": "Framework",
    "PyTorch 2.0": "PyTorch 2.0",
    "Optimization": "Optimization",
    "TorchScript, ONNX Runtime": "TorchScript, ONNX Runtime",
    "Deployment": "Deployment",
    "Docker container with GPU support": "Docker container with GPU support",
    "API": "API",
    "REST API with Django": "REST API with Django",
    "Development Team": "Development Team",
    "Lead Developer": "Lead Developer",
    "Paulius Bundza": "Paulius Bundza",
    "Institution": "Institution",
    "Vilnius Tech University": "Vilnius Tech University",
    "Department": "Department",
    "Faculty of Electronics": "Faculty of Electronics",
    "Contact": "Contact",
    "For technical support or collaboration inquiries": "For technical support or collaboration inquiries",
    "Version History": "Version History",
    "Current Version": "Current Version",
    "2.0.0 (January 2024)": "2.0.0 (January 2024)",
    "Previous Version": "Previous Version",
    "1.5.0 (October 2023)": "1.5.0 (October 2023)",
    "Initial Release": "Initial Release",
    "1.0.0 (June 2023)": "1.0.0 (June 2023)",
    "Classes:": "Classes:",
    "Normal, Pneumonia": "Normal, Pneumonia",
    "Input Size": "Input Size",
    "224x224 pixels": "224x224 pixels",
    "Framework": "Framework",
    "PyTorch 2.5.1": "PyTorch 2.5.1",
    "Training Dataset": "Training Dataset",
    "Chest X-Ray images": "Chest X-Ray images",
    "GPU Acceleration": "GPU Acceleration",
    "CUDA (if available)": "CUDA (if available)",
    "Model Size": "Model Size",
    "~25MB": "~25MB",
    "How It Works": "How It Works",
    "Image preprocessing and normalization": "Image preprocessing and normalization",
    "Feature extraction using CNN layers": "Feature extraction using CNN layers",
    "Classification based on learned patterns": "Classification based on learned patterns",
    "Training Performance": "Training Performance",
    "Overall Training History": "Overall Training History",
    "Lung disease classifier uses a deep learning model based on Convolutional Neural Networks (CNN) to analyze chest X-ray images and detect signs of pneumonia.": "Lung disease classifier uses a deep learning model based on Convolutional Neural Networks (CNN) to analyze chest X-ray images and detect signs of pneumonia.",
    "The model has been trained on a large dataset of chest X-ray images, learning to identify patterns and features that are indicative of pneumonia. When you upload an image, it goes through the following process:": "The model has been trained on a large dataset of chest X-ray images, learning to identify patterns and features that are indicative of pneumonia. When you upload an image, it goes through the following process:",
    "Model's learning progression showing accuracy and loss metrics over training epochs.": "Model's learning progression showing accuracy and loss metrics over training epochs.",
    "5-Fold Cross-Validation Results": "5-Fold Cross-Validation Results",
    "Training History Fold": "Training History Fold",
    "Fold": "Fold",
    "performance metrics": "performance metrics",
    "Model Evaluation": "Model Evaluation",
    "Confusion Matrix": "Confusion Matrix",
    "Confusion matrix showing the model's classification performance across different categories.": "Confusion matrix showing the model's classification performance across different categories.",
    "LDCS": "LDCS",
    "🌙": "🌙",
    "☀️": "☀️",
    "LDCS Logo": "LDCS Logo",
    "Change language": "Change language",
    "Switch theme": "Switch theme",
}

lt_translations = {
    "%(from)s-%(to)s relationship": "%(from)s-%(to)s ryšys",
    "Logo": "Logotipas",
    "Login": "Prisijungti",
    "Username": "Vartotojo vardas",
    "Password": "Slaptažodis",
    "Invalid username or password.": "Neteisingas vartotojo vardas arba slaptažodis.",
    "Home - Lung Disease Classifier": "Pradinis - Plaučių ligų klasifikatorius",
    "Lung Disease Classifier": "Plaučių ligų klasifikatorius",
    "Upload a chest X-ray image to detect pneumonia using our advanced deep learning model. Accuracy: 96.13% (validated through 5-fold cross-validation)": "Įkelkite krūtinės rentgeno nuotrauką pneumonijai aptikti naudojant mūsų pažangų giliojo mokymosi modelį. Tikslumas: 96,13% (patvirtinta 5 kartų kryžminiu patikrinimu)",
    "Upload X-Ray Image": "Įkelti rentgeno nuotrauką",
    "Patient Name": "Paciento vardas",
    "Patient Surname": "Paciento pavardė",
    "Patient ID": "Paciento ID",
    "Patient Date of Birth (YYYY-MM-DD)": "Paciento gimimo data (MMMM-MM-DD)",
    "YYYY-MM-DD": "MMMM-MM-DD",
    "Patient Gender": "Paciento lytis",
    "Select Gender": "Pasirinkite lytį",
    "Male": "Vyras",
    "Female": "Moteris",
    "X-Ray Date (YYYY-MM-DD)": "Rentgeno data (MMMM-MM-DD)",
    "Drag & Drop or Click to Upload": "Tempkite ir meskite arba spustelėkite norėdami įkelti",
    "Supported formats: JPEG, PNG, DICOM": "Palaikomi formatai: JPEG, PNG, DICOM",
    "Preview": "Peržiūra",
    "Analyze Image": "Analizuoti nuotrauką",
    "Loading...": "Kraunama...",
    "Analyzing your X-ray image...": "Analizuojama jūsų rentgeno nuotrauka...",
    "High Accuracy": "Aukštas tikslumas",
    "96.13% accuracy with cross-validation and ensemble learning.": "96,13% tikslumas su kryžminiu patikrinimu ir ansamblio mokymusi.",
    "Fast Processing": "Greitas apdorojimas",
    "Optimized with PyTorch JIT and parallel processing for rapid inference.": "Optimizuota su PyTorch JIT ir lygiagrečiu apdorojimu greitai išvadai.",
    "Detailed Analysis": "Išsami analizė",
    "Comprehensive probability scores and visualization.": "Išsamūs tikimybių įvertinimai ir vizualizacija.",
    "Recent Predictions": "Naujausi rezultatai",
    "All": "Visi",
    "Normal": "Normalus",
    "Pneumonia": "Pneumonija",
    "X-ray": "Rentgenas",
    "Patient Information:": "Paciento informacija:",
    "Name:": "Vardas:",
    "Surname:": "Pavardė:",
    "Patient ID:": "Paciento ID:",
    "Gender:": "Lytis:",
    "Date of Birth:": "Gimimo data:",
    "X-Ray Date:": "Rentgeno data:",
    "Prediction:": "Prognozė:",
    "Normal Probability:": "Normalumo tikimybė:",
    "Pneumonia Probability:": "Pneumonijos tikimybė:",
    "ago": "prieš",
    "MB": "MB",
    "s": "s",
    "Are you sure you want to delete this record?": "Ar tikrai norite ištrinti šį įrašą?",
    "Delete Record": "Ištrinti įrašą",
    "Load More Records": "Įkelti daugiau įrašų",
    "About - Lung Disease Classifier": "Apie - Plaučių ligų klasifikatorius",
    "About the Project": "Apie projektą",
    "Learn about the technology behind our lung disease classification system.": "Sužinokite apie technologiją, naudojamą mūsų plaučių ligų klasifikavimo sistemoje.",
    "Analysis Result - Lung Disease Classifier": "Analizės rezultatas - Plaučių ligų klasifikatorius",
    "Analysis Result": "Analizės rezultatas",
    "Primary Diagnosis": "Pagrindinė diagnozė",
    "Confidence:": "Pasitikėjimas:",
    "Probability Analysis": "Tikimybių analizė",
    "Technical Information": "Techninė informacija",
    "Processing Time": "Apdorojimo laikas",
    "Model Version": "Modelio versija",
    "Analysis Date": "Analizės data",
    "Hardware": "Aparatūra",
    "Analyze Another Image": "Analizuoti kitą nuotrauką",
    "Print Report": "Spausdinti ataskaitą",
    "Important Note": "Svarbi pastaba",
    "This analysis is provided as a screening tool and should not be used as the sole basis for diagnosis. Please consult with a qualified healthcare professional for proper medical evaluation and diagnosis.": "Ši analizė pateikiama kaip patikros priemonė ir neturėtų būti naudojama kaip vienintelis diagnozės pagrindas. Dėl tinkamo medicininio įvertinimo ir diagnozės kreipkitės į kvalifikuotą sveikatos priežiūros specialistą.",
    "Home": "Pradžia",
    "About": "Apie",
    "Logout": "Atsijungti",
    "Created by Paulius Bundza, Vilnius Tech. All rights reserved.": "Sukūrė Paulius Bundza, Vilnius Tech. Visos teisės saugomos.",
    "Language": "Kalba",
    "Select Language": "Pasirinkite kalbą",
    "English": "Anglų",
    "© 2024 Lung Disease Classifier. Created by Paulius Bundza, Vilnius Tech. All rights reserved.": "© 2024 Plaučių ligų klasifikatorius. Sukūrė Paulius Bundza, Vilnius Tech. Visos teisės saugomos.",
    "Model Information": "Modelio informacija",
    "Architecture": "Architektūra",
    "Convolutional Neural Network (CNN)": "Konvoliucinis neuroninis tinklas (CNN)",
    "Training Data": "Mokymo duomenys",
    "Over 100,000 chest X-ray images": "Virš 100 000 krūtinės rentgeno nuotraukų",
    "Validation Method": "Validavimo metodas",
    "5-fold cross-validation": "5 kartų kryžminis patikrinimas",
    "Base Model": "Bazinis modelis",
    "ResNet-50 with transfer learning": "ResNet-50 su perkeliamuoju mokymusi",
    "Training Time": "Mokymo laikas",
    "48 hours on NVIDIA A100": "48 valandos su NVIDIA A100",
    "Model Size": "Modelio dydis",
    "98MB (optimized with quantization)": "98MB (optimizuota su kvantavimu)",
    "Performance Metrics": "Veikimo metrikos",
    "Accuracy": "Tikslumas",
    "96.13%": "96,13%",
    "Sensitivity": "Jautrumas",
    "94.89%": "94,89%",
    "Specificity": "Specifiškumas",
    "97.37%": "97,37%",
    "F1 Score": "F1 įvertis",
    "95.92%": "95,92%",
    "AUC-ROC": "AUC-ROC",
    "0.983": "0,983",
    "Technical Details": "Techninė informacija",
    "Framework": "Karkasas",
    "PyTorch 2.0": "PyTorch 2.0",
    "Optimization": "Optimizavimas",
    "TorchScript, ONNX Runtime": "TorchScript, ONNX Runtime",
    "Deployment": "Diegimas",
    "Docker container with GPU support": "Docker konteineris su GPU palaikymu",
    "API": "API",
    "REST API with Django": "REST API su Django",
    "Development Team": "Kūrėjų komanda",
    "Lead Developer": "Pagrindinis kūrėjas",
    "Paulius Bundza": "Paulius Bundza",
    "Institution": "Institucija",
    "Vilnius Tech University": "Vilniaus Tech universitetas",
    "Department": "Fakultetas",
    "Faculty of Electronics": "Elektronikos fakultetas",
    "Contact": "Kontaktai",
    "For technical support or collaboration inquiries": "Dėl techninės pagalbos ar bendradarbiavimo",
    "Version History": "Versijų istorija",
    "Current Version": "Dabartinė versija",
    "2.0.0 (January 2024)": "2.0.0 (2024 m. sausis)",
    "Previous Version": "Ankstesnė versija",
    "1.5.0 (October 2023)": "1.5.0 (2023 m. spalis)",
    "Initial Release": "Pradinė versija",
    "1.0.0 (June 2023)": "1.0.0 (2023 m. birželis)",
    "Classes:": "Klasės:",
    "Normal, Pneumonia": "Normalus, Pneumonija",
    "Input Size": "Įvesties dydis",
    "224x224 pixels": "224x224 pikseliai",
    "Framework": "Karkasas",
    "PyTorch 2.5.1": "PyTorch 2.5.1",
    "Training Dataset": "Mokymo duomenų rinkinys",
    "Chest X-Ray images": "Krūtinės rentgeno nuotraukos",
    "GPU Acceleration": "GPU pagreitinimas",
    "CUDA (if available)": "CUDA (jei prieinama)",
    "Model Size": "Modelio dydis",
    "~25MB": "~25MB",
    "How It Works": "Kaip tai veikia",
    "Image preprocessing and normalization": "Vaizdo paruošimas ir normalizavimas",
    "Feature extraction using CNN layers": "Požymių išskyrimas naudojant CNN sluoksnius",
    "Classification based on learned patterns": "Klasifikavimas pagal išmoktus šablonus",
    "Training Performance": "Mokymo rezultatai",
    "Overall Training History": "Bendra mokymo istorija",
    "Plaučių ligų klasifikatorius naudoja gilaus mokymosi modelį, pagrįstą konvoliuciniais neuroniniais tinklais (CNN), krūtinės rentgeno nuotraukoms analizuoti ir pneumonijos požymiams aptikti.": "Plaučių ligų klasifikatorius naudoja gilaus mokymosi modelį, pagrįstą konvoliuciniais neuroniniais tinklais (CNN), krūtinės rentgeno nuotraukoms analizuoti ir pneumonijos požymiams aptikti.",
    "The model has been trained on a large dataset of chest X-ray images, learning to identify patterns and features that are indicative of pneumonia. When you upload an image, it goes through the following process:": "Modelis buvo apmokytas naudojant didelį krūtinės rentgeno nuotraukų rinkinį, mokydamasis atpažinti pneumonijai būdingus šablonus ir požymius. Kai įkeliate nuotrauką, ji pereina šį procesą:",
    "Model's learning progression showing accuracy and loss metrics over training epochs.": "Modelio mokymosi progresas, rodantis tikslumo ir praradimo metrikas per mokymo epochas.",
    "5-Fold Cross-Validation Results": "5 kartų kryžminio patikrinimo rezultatai",
    "Training History Fold": "Mokymo istorijos dalis",
    "Fold": "Dalis",
    "performance metrics": "veikimo metrikos",
    "Model Evaluation": "Modelio įvertinimas",
    "Confusion Matrix": "Painiavos matrica",
    "Confusion matrix showing the model's classification performance across different categories.": "Painiavos matrica, rodanti modelio klasifikavimo rezultatus skirtingose kategorijose.",
    "LDCS": "PLKS",
    "🌙": "🌙",
    "☀️": "☀️",
    "LDCS Logo": "PLKS Logotipas",
    "Change language": "Keisti kalbą",
    "Switch theme": "Keisti temą",
}

# Create PO files
create_po_file('en', en_translations)
create_po_file('lt', lt_translations)

print("Processing file django.po in", os.path.abspath('locale/lt/LC_MESSAGES'))
print("Processing file django.po in", os.path.abspath('locale/en/LC_MESSAGES')) 